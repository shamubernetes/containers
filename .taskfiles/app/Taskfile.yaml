# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  CHANNEL: '{{ default "stable" .CHANNEL }}'
  LABELS_CONFIG_FILE: '{{ .ROOT_DIR }}/.github/labels.yaml'
  LABELER_FILE: '{{ .ROOT_DIR }}/.github/labeler.yaml'

tasks:

  add:
    desc: Add a new app
    cmds:
    - echo "Not implemented yet"
    # - .append-app-labels

  test:
    desc: |-
      task APP=<app> CHANNEL=<channel> ARCH=<amd64|arm64> app:test
    cmds:
    - task: .download-goss
    - >-
      cue vet --schema '#Spec' ./apps/{{.APP}}/metadata.yaml metadata.rules.cue
    - >-
      docker buildx build --progress=plain --load -t {{.APP}}:{{.CHANNEL}} --build-arg CHANNEL={{.CHANNEL}} --build-arg VERSION=$(bash {{.ROOT_DIR}}/apps/{{.APP}}/ci/latest.sh "{{.CHANNEL}}") {{if eq .MULTIPLATFORM "true"}} --platform $(jq -r '.channels[] | select(.name=="{{.CHANNEL}}").platforms | join(",")' ./apps/{{.APP}}/metadata.json) {{else}} --platform "linux/{{.ARCH}}" {{end}} -f ./apps/{{.APP}}/Dockerfile .
    - >-
      ./.goss/dgoss run {{.APP}}:{{.CHANNEL}} {{if eq .BASE "true"}}tail -f /dev/null{{end}}
    env:
      CONTAINER_RUNTIME: docker
      GOSS_PATH: ./.goss/goss
      GOSS_OPTS: --sleep 5s --retry-timeout 60s --color --format documentation
      GOSS_SLEEP: 2
      GOSS_FILE: ./apps/{{.APP}}/ci/goss.yaml
      GOSS_FILES_STRATEGY: cp
    vars:
      MULTIPLATFORM: '{{ default "false" .MULTIPLATFORM }}'
      ARCH: '{{ default "$(uname -m | sed s/x86_64/amd64/)" .ARCH }}'

  .download-goss:
    internal: true
    silent: true
    vars:
      GOSS_VERSION: v0.4.8
    cmds:
    - mkdir -p ./.goss
    - curl -fsSL -o ./.goss/goss https://github.com/aelsabbahy/goss/releases/download/{{.GOSS_VERSION}}/goss-linux-amd64
    - chmod +x ./.goss/goss
    - curl -fsSL -o ./.goss/dgoss https://raw.githubusercontent.com/aelsabbahy/goss/{{.GOSS_VERSION}}/extras/dgoss/dgoss
    - chmod +x ./.goss/dgoss
    status:
    - test -f ./.goss/goss
    - test -f ./.goss/dgoss

  .append-app-labels:
    internal: true
    desc: Append app labels to the labels config file
    cmd: |-
      #!/usr/bin/env bash
      app_exists=$(yq e '.[] | select(.name == "app/{{.APP}}")' {{.LABELS_CONFIG_FILE}} | wc -l)
      if [ "$app_exists" -eq 0 ]; then
        yq e -i '. += [{"name": "app/{{.APP}}", "color": "0e8a16" }]' {{.LABELS_CONFIG_FILE}}
        yq e -i '. |= .[] style="flow"' {{.LABELS_CONFIG_FILE}}
      fi
      app_exists=$(yq e 'has("app/{{.APP}}")' {{.LABELER_FILE}})
      if [ "$app_exists" == "false" ]; then
        yq e -i '."app/{{.APP}}" = [{"changed-files": [{"any-glob-to-any-file": "apps/{{.APP}}/**/*"}]}]' {{.LABELER_FILE}}
        yamlfmt -formatter indentless_arrays=true {{.LABELER_FILE}}
      fi
    vars:
      app: '{{ .APP }}'
    silent: true

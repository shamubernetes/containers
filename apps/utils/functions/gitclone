#!/usr/bin/env zsh

# function gitclone [[[
  builtin emulate -LR zsh ${=${options[xtrace]:#off}:+-o xtrace}
  builtin setopt warn_create_global typeset_silent no_short_loops rc_quotes no_auto_pushd extended_glob no_monitor pipefail

  zmodload zsh/zutil || return

  local flag_help flag_check flag_list
  local arg_repo=()
  local arg_branch=("main")
  local arg_path=("/config")

  local usage="""
    [-h|--help]
    [-r|--repo <repo>] [-b|--branch <branch> (default: main)] [-p|--path <path> (default: /config)]
"""

  zparseopts -D -F -K --    \
    {h,-help}=flag_help     \
    {r,-repo}:=arg_repo     \
    {b,-branch}:=arg_branch \
    {p,-path}:=arg_path     \
    {c,-check}=flag_check   \
    {l,-list}=flag_list     || return 1

  [[ -z "$flag_help" ]] || { +log:info $usage && return }

  local REPO="${arg_repo[-1]}"
  local BRANCH="${arg_branch[-1]}"
  local PATH="${arg_path[-1]}"

  [[ -n "${REPO}" ]] || { +log:error "Missing required argument: --repo" && return 1 }

  [[ -d "${PATH}" ]] || { +log:error "Path ${PATH} does not exist" && return 1 }

  # Check if repo is just owner/repo
  if [[ "${REPO}" == *"/"* ]]; then
    +log:debug "Repo is in owner/repo format"
    REPO="https://github.com/${REPO}.git"
  fi

  +log:debug "Cloning ${REPO} on ${BRANCH} to /tmp/gitclone"
  /usr/bin/git clone --single-branch --branch "${BRANCH}" "${REPO}" /tmp/gitclone || { +log:error "Could not clone the repository ($REPO)" && return 1 }
  +log:debug "Copying files to ${PATH}"

  # Check Flag can be used to check if it will overwrite anyfiles first and list them
  # Then verify that they were overwritten

  /bin/cp -rf /tmp/gitclone/* "${PATH}" || { +log:error "Could not copy from tmp to ${PATH}" && return 1 }
  +log:debug "Removing /tmp/gitclone"
  /bin/rm -rf /tmp/gitclone || { +log:error "Could not remove temp directory" && return 1 }
  +log:info "Cloned ${REPO} on ${BRANCH} to ${PATH}"

  # if [[ -n "${flag_check}" ]]; then
  #   +log:debug "Checking for files that were overwritten"
  #   /usr/bin/git -C "${PATH}" status --porcelain | /usr/bin/grep -E "^(M|D)" || { +log:info "No files were overwritten" && return 0 }
  # fi

  if [[ -n "${flag_list}" ]]; then
    +log:debug "Listing files in ${PATH}"
    /bin/ls -la "${PATH}"
  fi

### ]]]
